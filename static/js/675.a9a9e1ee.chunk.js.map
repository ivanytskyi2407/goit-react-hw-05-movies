{"version":3,"file":"static/js/675.a9a9e1ee.chunk.js","mappings":"sSAAMA,EAAW,gCACXC,EAAM,mCAAZ,SAEeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,YACQE,EADR,QAEkBC,GAFlB,iCAGYD,EAASE,OAHrB,gDAIMC,QAAQC,OAAO,IAAIC,MAAM,cAJ/B,2GAOO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAIF,EAAJ,sCAA0CC,IAGlE,SAASY,EAAcC,GAC5B,OAAOZ,EAAuB,GAAD,OAAIF,EAAJ,kBAAsBc,EAAtB,oBAAwCb,IAGhE,SAASc,EAAcD,GAC5B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iBACPc,EADO,4BACmBb,IAG3C,SAASe,EAAiBF,GAC/B,OAAOZ,EAAuB,GAAD,OACxBF,EADwB,iBACPc,EADO,4BACmBb,IAG3C,SAASgB,EAAgBC,GAC9B,OAAOhB,EAAuB,GAAD,OACxBF,EADwB,gCACQC,EADR,iCACoCiB,M,8EC7BnE,EAA0B,8BAA1B,EAAkE,8BAAlE,EAAwG,4BAAxG,EAA2I,2BAA3I,EAA6K,2BAA7K,EAA+M,2BAA/M,EAAgP,0B,6CCUjO,SAASC,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA8BF,EAAAA,EAAAA,UAAS,MAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAEMC,GAAWC,EAAAA,EAAAA,MACTC,GAAUC,EAAAA,EAAAA,MAAVD,OAERE,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAO,CACT,IAAQG,EAAqBH,EAArBG,SAAUC,EAAWJ,EAAXI,OAClBP,EAAW,GAAD,OAAIM,GAAJ,OAAeC,OAE1B,CAACJ,IAYJ,OANAE,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAcO,GAASc,MAAK,SAAAC,GAC1BX,EAAYW,QAEb,CAACf,KAGF,gCACGG,IACC,iCACE,mBAAQa,QAdD,WACbT,EAASF,IAasBY,UAAWC,EAApC,sBAIA,iBAAKD,UAAWC,EAAhB,WACE,gBACED,UAAWC,EACXC,IAAG,6CAAwChB,EAASiB,aACpDC,IAAI,MAEN,2BACE,eAAIJ,UAAWC,EAAf,mBAA4Bf,EAASmB,UACrC,gBAAIL,UAAWC,EAAf,WACE,0CACA,uBAAIf,EAASoB,mBAEf,gBAAIN,UAAWC,EAAf,WACE,0CACA,uBAAIf,EAASqB,mBAEf,gBAAIP,UAAWC,EAAf,WACE,mCACA,uBAAIf,EAASsB,OAAOC,KAAI,qBAAGC,QAAiBC,KAAK,YAEnD,gBAAIX,UAAWC,EAAf,WACE,mCACA,uBAAIf,EAAS0B,wBAMvB,gBAAIZ,UAAWC,EAAf,WACE,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAQY,GAAG,OAA5B,qBAIF,eAAIb,UAAWC,EAAf,UACE,SAAC,KAAD,CAAMD,UAAWC,EAAQY,GAAG,UAA5B,2BAKJ,SAAC,KAAD","sources":["services/API.js","webpack://react-homework-template/./src/views/MovieDetails/MovieDetails.module.css?d4e2","views/MovieDetails/MovieDetails.js"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '084ca305e7a4e4bb3dbbc7b67e975385';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function FetchTrending() {\n  return fetchWithErrorHandling(`${BASE_URL}trending/movie/day?api_key=${KEY}`);\n}\n\nexport function FetchFilmById(filmId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${filmId}?api_key=${KEY}`);\n}\n\nexport function FetchFilmCast(filmId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${filmId}/credits?api_key=${KEY}`\n  );\n}\nexport function FetchFilmReviews(filmId) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${filmId}/reviews?api_key=${KEY}`\n  );\n}\nexport function FetchFilmSearch(query) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&query=${query}`\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__d551-\",\"picture\":\"MovieDetails_picture__0S5xc\",\"title\":\"MovieDetails_title__enS9x\",\"list\":\"MovieDetails_list__K70eK\",\"item\":\"MovieDetails_item__iG+sD\",\"link\":\"MovieDetails_link__P7Cgn\",\"btn\":\"MovieDetails_btn__5BiLF\"};","import s from './MovieDetails.module.css';\nimport { useState, useEffect } from 'react';\nimport { FetchFilmById } from '../../services/API';\nimport {\n  Link,\n  Outlet,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [filmInfo, setFilmInfo] = useState(null);\n  const [backUrl, setBackUrl] = useState(null);\n\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  useEffect(() => {\n    if (state) {\n      const { pathname, search } = state;\n      setBackUrl(`${pathname}${search}`);\n    }\n  }, [state]);\n\n  const goBack = () => {\n    navigate(backUrl);\n  };\n\n  useEffect(() => {\n    FetchFilmById(movieId).then(film => {\n      setFilmInfo(film);\n    });\n  }, [movieId]);\n\n  return (\n    <>\n      {filmInfo && (\n        <>\n          <button onClick={goBack} className={s.btn}>\n            Go Back\n          </button>\n          {/* <Link to={`${pathname}/${search}`}>Go Back</Link> */}\n          <div className={s.wrapper}>\n            <img\n              className={s.picture}\n              src={`https://image.tmdb.org/t/p/original${filmInfo.poster_path}`}\n              alt=\"\"\n            />\n            <ul>\n              <h2 className={s.title}>{`${filmInfo.title}`}</h2>\n              <li className={s.item}>\n                <h3>Vote / Votes</h3>\n                <p>{filmInfo.vote_average}</p>\n              </li>\n              <li className={s.item}>\n                <h3>Release date</h3>\n                <p>{filmInfo.release_date}</p>\n              </li>\n              <li className={s.item}>\n                <h3>Genre</h3>\n                <p>{filmInfo.genres.map(({ name }) => name).join(', ')}</p>\n              </li>\n              <li className={s.item}>\n                <h3>About</h3>\n                <p>{filmInfo.overview}</p>\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n      <ul className={s.list}>\n        <li className={s.item}>\n          <Link className={s.link} to=\"cast\">\n            Cast\n          </Link>\n        </li>\n        <li className={s.item}>\n          <Link className={s.link} to=\"reviews\">\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["BASE_URL","KEY","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","FetchTrending","FetchFilmById","filmId","FetchFilmCast","FetchFilmReviews","FetchFilmSearch","query","MovieDetails","movieId","useParams","useState","filmInfo","setFilmInfo","backUrl","setBackUrl","navigate","useNavigate","state","useLocation","useEffect","pathname","search","then","film","onClick","className","s","src","poster_path","alt","title","vote_average","release_date","genres","map","name","join","overview","to"],"sourceRoot":""}